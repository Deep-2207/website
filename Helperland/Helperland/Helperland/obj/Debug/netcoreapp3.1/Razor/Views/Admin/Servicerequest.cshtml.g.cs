#pragma checksum "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\Admin\Servicerequest.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "13fbf2c13fafa41803ea5f0d6605bbe61cd48c89"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Servicerequest), @"mvc.1.0.view", @"/Views/Admin/Servicerequest.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Enums;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"13fbf2c13fafa41803ea5f0d6605bbe61cd48c89", @"/Views/Admin/Servicerequest.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1b4b1c47201b9aa2787e6cec5b59d0d5213a1108", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Servicerequest : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/admin-user/add.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("requestmanagement"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\Admin\Servicerequest.cshtml"
  
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "ServiceRequest";
    int serviceprovider = Convert.ToInt16(UserTypeEnum.ServiceProvider);
    int customer = Convert.ToInt16(UserTypeEnum.Customer);

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"side-dashboard p-lr-20\">\r\n    <div class=\"sub-headding d-flex justify-content-between p-tb-15 m-t-15\">\r\n        <h2>Service Requests</h2>\r\n        <button class=\"new-user btn\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "13fbf2c13fafa41803ea5f0d6605bbe61cd48c896467", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("&nbsp;&nbsp; Add New\r\n            User\r\n        </button>\r\n    </div>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "13fbf2c13fafa41803ea5f0d6605bbe61cd48c897660", async() => {
                WriteLiteral(@"
        <div class=""form-row align-items-center d-flex justify-content-center dv-filter"">
            <div class=""col"">
                <input type=""text"" class=""form-control w-auto"" placeholder=""Service ID"" id=""idservicerequestsr"">
            </div>
            <div class=""col"">
                <input type=""text"" class=""form-control w-auto"" placeholder=""Postal Code"" id=""idpostalcodesr"">
            </div>
            <div class=""col form-group"">

                <select id=""idcustomerdrp"" class=""form-select width-127"">
                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "13fbf2c13fafa41803ea5f0d6605bbe61cd48c898502", async() => {
                    WriteLiteral("Customer");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "13fbf2c13fafa41803ea5f0d6605bbe61cd48c8910393", async() => {
                    WriteLiteral("...");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </select>\r\n            </div>\r\n            <div class=\"col form-group drop-service-provider w-auto\">\r\n\r\n                <select id=\"idserviceproviderdrp\" class=\"form-select width-152\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "13fbf2c13fafa41803ea5f0d6605bbe61cd48c8911643", async() => {
                    WriteLiteral("Service Provider");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n                </select>\r\n            </div>\r\n            <div class=\"col form-group\">\r\n\r\n                <select id=\"idenumservicestutes\" class=\"form-select width-120\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "13fbf2c13fafa41803ea5f0d6605bbe61cd48c8913735", async() => {
                    WriteLiteral("Status");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 41 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\Admin\Servicerequest.cshtml"
                     foreach (var sp in Enum.GetNames(typeof(ServiceStatusEnum)))
                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "13fbf2c13fafa41803ea5f0d6605bbe61cd48c8915941", async() => {
#nullable restore
#line 43 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\Admin\Servicerequest.cshtml"
                                       Write(sp);

#line default
#line hidden
#nullable disable
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 43 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\Admin\Servicerequest.cshtml"
                           WriteLiteral(sp);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 44 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\Admin\Servicerequest.cshtml"
                    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                </select>
            </div>
            <div class=""col datetime"">
                <!-- <input type=""text"" placeholder=""From Date"" class=""form-control input-element width-135"" onfocus=""(this.type='date')"" onblur=""(this.type='text')""> -->
                <input type=""text"" id=""txtsrFromDate"" placeholder=""From Date"" onfocus=""(this.type='date')"" class=""calender-icon form-control input-element width-135"">
                <!-- <input type=""date"" class=""form-control input-element width-135"" id=""""> -->
            </div>
            <div class=""col datatime"">
                <!-- <input type=""text"" placeholder=""To Date"" class=""form-control input-element width-135"" onfocus=""(this.type='date')"" onblur=""(this.type='text')""> -->
                <input type=""text"" id=""txtsrtoDate"" placeholder=""To Date"" class=""calender-icon form-control input-element width-135"" onfocus=""(this.type='date')"">
                <!-- <input type=""date"" class=""form-control input-element width-135"" id=""""> -->

       ");
                WriteLiteral(@"     </div>
            <div class=""d-flex mt-3 mb-3"">

                <div class=""col"">
                    <button type=""button"" class=""btn btn-primary mb-2 admin-submit width-84"" id=""idsubmit"">Submit</button>
                </div>
                <div class=""col"">
                    <button type=""button"" id=""btnclear"" class=""btn btn-light mb-2 width-84"">clear</button>
                </div>
            </div>
        </div>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    <div class=\"admin-data-table p-t-20\">\r\n        <table id=\"example\" class=\"display\" style=\"width:100%\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Service ID<img");
            BeginWriteAttribute("alt", " alt=\"", 3634, "\"", 3640, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img p-l-5\"></th>\r\n                    <th>Service date<img");
            BeginWriteAttribute("alt", " alt=\"", 3715, "\"", 3721, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img p-l-5\"></th>\r\n                    <th>Customer details<img");
            BeginWriteAttribute("alt", " alt=\"", 3800, "\"", 3806, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img p-l-5\"></th>\r\n                    <th>Service provider<img");
            BeginWriteAttribute("alt", " alt=\"", 3885, "\"", 3891, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img p-l-5\"></th>\r\n                    <th>Status<img");
            BeginWriteAttribute("alt", " alt=\"", 3960, "\"", 3966, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img p-l-5\"></th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            </tbody>\r\n\r\n        </table>\r\n    </div>\r\n\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script>
        $(document).ready(function () {
            $('#example').on('draw.dt', function () { //every time ajax call, this code execute

                $("".ratingspdashboard"").rating({
                    min: 0,
                    max: 5,
                    step: 0.1,
                    size: ""xs"",
                    stars: ""5"",
                    showClear: false,
                    readonly: true,
                    starCaptions: function (val) {
                        return val;
                    }
                });
            });
            $('#example').DataTable({

                ""dom"": '<""top""i>rt<""bottom""flp><""clear"">',


                ""bFilter"": false, //hide Search bar
                ""pagingType"": ""full_numbers"",
                paging: true,
                ""pagingType"": ""full_numbers"",
                // bFilter: false,
                ordering: true,
                searching: true,
                info: true,

                """);
                WriteLiteral(@"oLanguage"": {
                    ""sInfo"": ""Total Records: _TOTAL_""
                },
                ""dom"": 'Bt<""top"">rt<""bottom""lip><""clear"">',
                responsive: true,
                ""order"": [],

            });
            $(""#loader"").addClass(""is-active"");
            getallservicerequest();
        });
        function getallservicerequest() {

            $.ajax({
                type: 'post',
                url: '/Admin/getallrequest',
                success: function (resp) {
                    $(""#loader"").removeClass(""is-active"");
                    console.log(resp);
                    $('#example').DataTable().clear();

                    resp.forEach(function (element) {
                        var t = $('#example').DataTable();
                        date = new Date(element.servicestartdate);
                        var inputtagdate = AppendZero(date.getDate().toString()) + ""-"" + AppendZero((date.getMonth() + 1).toString()) + ""-"" + date.getFullYear().");
                WriteLiteral(@"toString();
                        var d2 = new Date(element.servicestartdate);
                        d2.setMinutes(d2.getMinutes() + (element.servicehours * 60));
                        var temptime = AppendZero(date.getHours().toString()) + "":"" + AppendZero(date.getMinutes().toString()) + "" - "" + AppendZero(d2.getHours().toString()) + "":"" + AppendZero(d2.getMinutes().toString())
                        var inputtagdate = AppendZero(date.getDate().toString()) + ""-"" + AppendZero((date.getMonth() + 1).toString()) + ""-"" + date.getFullYear().toString();
                        var serviceproviderdetails;

                        if (element.serviceprovideruser != null) {
                            serviceproviderdetails = '<div class=""d-flex""><img class=""align-self-center mr-3"" src=""..//img/customer-service/forma-1-copy-19.png""> <div class=""media-body ms-2""> ' + element.serviceprovideruser.firstName + "" "" + element.serviceprovideruser.lastName;

                            if (element.ratings != n");
                WriteLiteral(@"ull) {
                                serviceproviderdetails = serviceproviderdetails + '<input required class= ""ratingspdashboard""  value = ""' + element.ratings + '"" type = ""text"" title = """" > ';
                            }
                            else {
                                serviceproviderdetails = serviceproviderdetails + ""<br> Not Rated"";
                            }

                            serviceproviderdetails = serviceproviderdetails + "" </div></div>"";
                        }
                        else {
                            serviceproviderdetails = '';
                        }

                        var servicestutas;
                        var editandrefunnd;
                        switch (element.status) {
                            case 1:
                                servicestutas = '<button class=""btn-new"" value=""New"">New</button>';
                                editandrefunnd = '<ul class=""dropdown-menu dropdown-menu-lg-end"" aria-l");
                WriteLiteral(@"abelledby=""navbarDropdown""><li><a class=""dropdown-item"" data-bs-target=""#editrefundmodel"" data-bs-toggle=""modal"" onclick=""Editservicerequest(' + element.servicerequestid + ')"">Edit & Refund</a></li><li><a class=""dropdown-item"" onclick=""CancelRequestbyAdmin(' + element.servicerequestid + ')"">Cancel SR By Cust</a></li></ul>';
                                break;
                            case 2:
                                servicestutas = '<button class=""btn-pandding"" value=""pending"">pending</button>';
                                editandrefunnd = '<ul class=""dropdown-menu dropdown-menu-lg-end"" aria-labelledby=""navbarDropdown""><li><a class=""dropdown-item"" data-bs-target=""#editrefundmodel"" data-bs-toggle=""modal"" onclick=""Editservicerequest(' + element.servicerequestid + ')"">Edit & Refund</a></li><li><a class=""dropdown-item"" onclick=""CancelRequestbyAdmin(' + element.servicerequestid + ')"">Cancel SR By Cust</a></li></ul>';
                                break;
                            case 3:");
                WriteLiteral(@"
                                servicestutas = '<button class=""btn-Cancel"" value=""Cancelled"">Cancelled</button>';
                                editandrefunnd = ''
                                break;
                            case 4:
                                servicestutas = '<button class=""btn-completed"" value=""Completed"">Completed</button>';
                                editandrefunnd = ''
                                break;
                        }



                        t.row.add([
                            element.servicerequestid,
                            '<img src=""..//img/service-provider-upcoming-service/calendar2.png"" class=""me-2"" alt=""""><span class=""bold"">' + inputtagdate + '</span> <br><img src=""..//img/service-provider-upcoming-service/layer-712.png"" class=""me-2"" alt="""">' + temptime,
                            element.customeruser.firstName + element.customeruser.lastName + '<br><img src = ""..//img/service-provider-upcoming-service/layer-15.png"" alt =");
                WriteLiteral(@" """"> ' + element.customeraddress1 + ' <br> ' + element.customeraddress2,
                            serviceproviderdetails,
                            servicestutas,
                            '<div class=""nav-item dropdown action servicerequestaction"">' +
                            '<a class= ""nav-link dropdown-toggle"" href = ""#"" id = ""navbarDropdown"" role = ""button""' +
                            'data-bs-toggle=""dropdown"" aria-expanded=""false"" >' +
                            '<img src=""..//img/admin-user/group-38.png"" alt="""">' +
                            '</a>' +
                            editandrefunnd +
                            '</div >'

                        ]).draw(false);
                        $('.rb-rating').rating({
                            'showCaption': true,
                            'stars': '3',
                            'min': '0',
                            'max': '3',
                            'step': '1',
                            'size': 'xs',");
                WriteLiteral(@"
                            'starCaptions': { 0: 'status:nix', 1: 'status:wackelt', 2: 'status:geht', 3: 'status:laeuft' }
                        });
                        $("".ratingspdashboard"").rating({
                            min: 0,
                            max: 5,
                            step: 0.1,
                            size: ""xs"",
                            stars: ""5"",
                            showClear: false,
                            readonly: true,
                            starCaptions: function (val) {
                                return val;
                            },
                        });
                    });
                },
                error: function (err) {
                    $(""#loader"").removeClass(""is-active"");
                    console.log(err);
                }
            });
        }
        function AppendZero(input) {
            if (input.length == 1) {
                return '0' + input;
            ");
                WriteLiteral(@"}
            return input;
        }
        $(""#btnclear"").click(function () {
            var table = $('#example').DataTable();
            debugger;
            $(""#idservicerequestsr"").val('');
            $(""#idpostalcodesr"").val('');
            $(""#idenumservicestutes"").val(0);
            $(""#idserviceproviderdrp"").val(0);
            $(""#idcustomerdrp"").val(0);
            $(""#txtsrFromDate"").val("""");
            $(""#txtsrtoDate"").val("""");
            table
                .search('')
                .columns().search('')
                .draw();
        });
        $(""#idsubmit"").click(function () {




           
            var t = $('#example').DataTable();
            var servicerequest = $(""#idservicerequestsr"").val();
            var postalcode = $(""#idpostalcodesr"").val();
            var servicestutes = $(""#idenumservicestutes"").val();
            console.log(servicestutes);
            if (servicerequest != '') {
                t.column(0).search(""^"" + serv");
                WriteLiteral(@"icerequest + ""$"", true, false, true).draw(true);
            }

            t.column(2).search(postalcode).draw(true);
            if (servicestutes != null) {
                t.column(4).search(servicestutes).draw(true);
            }

           // if ($(""#txtsrFromDate"").val() != '' && $(""#idtodate"").val() != '') {
                jQuery.fn.dataTable.ext.search.push(
                    function (settings, data, dataIndex) {
                        var min = """";
                        var max = """";
                        if ($(""#txtsrFromDate"").val() != '' && $(""#idtodate"").val() != '') {
                             min = new Date(parseInt($(""#txtsrFromDate"").val().toString().split('-')[0]), parseInt(parseInt($(""#txtsrFromDate"").val().toString().split('-')[1]) - 1), parseInt($(""#txtsrFromDate"").val().toString().split('-')[2]), 0, 0, 0, 0);
                             max = new Date(parseInt($(""#txtsrtoDate"").val().toString().split('-')[0]), parseInt(parseInt($(""#txtsrtoDate"").val().toStr");
                WriteLiteral(@"ing().split('-')[1]) - 1), parseInt($(""#txtsrtoDate"").val().toString().split('-')[2]), 0, 0, 0, 0);
                        }
                            var date = new Date(parseInt(data[1].toString().split('-')[2]), parseInt(parseInt(data[1].toString().split('-')[1]) - 1), parseInt(data[1].toString().split('-')[0]), 0, 0, 0, 0);
                            var inputtagdate = AppendZero(AppendZero((date.getMonth() + 1).toString()) + ""-"" + date.getDate().toString()) + ""-"" + date.getFullYear().toString();
                            if (
                                (min === '' && max === '') ||
                                (min === '' && date <= max) ||
                                (min <= date && max === '') ||
                                (min <= date && date <= max)
                            ) {
                                console.log('success');
                                return true;
                            }
                            else {
                    ");
                WriteLiteral(@"            console.log('error');
                                return false;
                            }
                        
                    }
                );
                t.draw();
            //}

        });

        function Editservicerequest(serviceid) {

            $.ajax({
                type: 'post',
                url: '/Admin/editrequest',
                data: { 'servicerequestid': serviceid },
                success: function (resp) {
                    console.log(resp);
                    $(""#hiddenservicerequest"").val(resp.serviceaddress.serviceRequestId);
                    $(""#adminerrormesgrechedual"").addClass("" d-none"")
                    //file servicetime and date
                    const date = new Date(resp.starttimeanddate);
                    var inputTagDate = date.getFullYear().toString() + ""-"" + AppendZero((date.getMonth() + 1).toString()) + ""-"" + AppendZero(date.getDate().toString());
                    console.log(resp.start");
                WriteLiteral(@"timeanddate + ""---"" + date);
                    $(""#admindatechange"").val(inputTagDate);
                    var today = new Date();
                    $(""#admindatechange"").attr(""min"", (today.getFullYear().toString() + '-' + AppendZero((today.getMonth() + 1).toString()) + '-' + AppendZero(today.getDate().toString())));
                    //console.log(respo.serviceStartDate.)
                    var hours = date.getHours(); //returns 0-23
                    var minutes = date.getMinutes(); //returns 0-5
                    $(""#admindrpselecttime"").val(hours + (minutes / 60));

                    //file customer address
                    $(""#admintxtstreetname"").val(resp.serviceaddress.addressLine1);
                    $(""#admintxthousenumber"").val(resp.serviceaddress.addressLine2);
                    $(""#admintxtpostalcode"").val(resp.serviceaddress.postalCode);
                    var city = resp.serviceaddress.city;
                    debugger;
                    FillCityDropdownby");
                WriteLiteral(@"id(resp.serviceaddress.postalCode, city);
                    $(""#admindropcity"").val(resp.serviceaddress.city);
                    //$(""#admindropcity option:contains("" + resp.serviceaddress.city +"")"");
                    console.log(resp.serviceaddress.city);
                },
                error: function (err) {
                    $(""#loader"").removeClass(""is-active"");
                    console.log(err);
                }
            });
        }
        function FillCityDropdownbyid(postalcode, city) {
            var postalcode = $('#admintxtpostalcode').val();
            $(""#loader"").addClass(""is-active"");
            $.ajax({
                type: ""POST"",
                url: '/home/FillCityDropdown',
                data: { ""postalcode"": postalcode },
                success: function (respo) {

                    console.log(respo);
                    $(""#loader"").removeClass(""is-active"");
                    $(""#admindropcity"").empty();
                    respo.f");
                WriteLiteral(@"orEach((city) => $('#admindropcity').append($(""<option></option>"").val(city.cityName).html(city.cityName)));
                    debugger;
                    $(""#admindropcity"").val(city);
                },
                error: function (err) {
                    $(""#loader"").removeClass(""is-active"");
                    console.log(err);
                }
            })
        }

        function editandreschedul() {
            var editdata = {}
            editdata.ServicerequestID = $(""#hiddenservicerequest"").val();
            editdata.StartDate = $(""#admindatechange"").val();
            editdata.StartTime = $(""#admindrpselecttime :selected"").text();
            editdata.Streetname = $(""#admintxtstreetname"").val();
            editdata.HouseNumber = $(""#admintxthousenumber"").val();
            editdata.PostalCode = $(""#admintxtpostalcode"").val();
            editdata.City = $(""#admindropcity"").val();
            editdata.Comment = $(""#admincommet"").val();

            $.ajax({");
                WriteLiteral(@"
                type: 'post',
                url: '/Admin/editandreschedul',

                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(editdata),
                success: function (respo) {

                    if (respo.serviceRequestConflict == false) {
                        $(""#adminerrormesgrechedual"").removeClass("" d-none"")
                        $(""#adminerrormesgrechedual"").html(""Another service request has been assigned to the service provider on "" + editdata.StartTime + ""Either choose another date or pick up a different time slot"");
                    }
                    if (respo.serviceovertime == false) {
                        $(""#adminerrormesgrechedual"").removeClass("" d-none"")
                        $(""#adminerrormesgrechedual"").html(""Could not completed the service request, because service booking request is must be completed within 21:00 time"");
                    }
                    $(""#editrefundmod");
                WriteLiteral(@"el"").modal(""hide"");
                },
                error: function (err) {
                    $(""#loader"").removeClass(""is-active"");
                    console.log(err);
                }
            });
        }
        function CancelRequestbyAdmin(serviceid) {
            console.log(serviceid)
            Swal.fire({
                title: 'Are you sure?',
                text: ""You are Cancel the service on the Be half of the customer"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Cancel it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'post',
                        url: '/Admin/cancelservcierequest',
                        data: { ""serviceid"": serviceid },
                        success: function (respo) {
                 ");
                WriteLiteral(@"          // $('#example').DataTable().ajax.reload();
                            Swal.fire(
                                'Cancel!',
                                'Servicerequest is Cancelled',
                                'success'
                            )
                        },
                        error: function (err) {
                            $(""#loader"").removeClass(""is-active"");
                            console.log(err);
                        }
                    });

                }
            })
        }
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
