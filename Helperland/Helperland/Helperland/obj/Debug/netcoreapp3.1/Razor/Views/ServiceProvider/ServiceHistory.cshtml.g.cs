#pragma checksum "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\ServiceProvider\ServiceHistory.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8351770f4dcc576cff52b5d85677a28c9e770c51"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ServiceProvider_ServiceHistory), @"mvc.1.0.view", @"/Views/ServiceProvider/ServiceHistory.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Enums;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8351770f4dcc576cff52b5d85677a28c9e770c51", @"/Views/ServiceProvider/ServiceHistory.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1b4b1c47201b9aa2787e6cec5b59d0d5213a1108", @"/Views/_ViewImports.cshtml")]
    public class Views_ServiceProvider_ServiceHistory : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\ServiceProvider\ServiceHistory.cshtml"
  
    Layout = "~/Views/Shared/UserLayout.cshtml";
    ViewData["Title"] = "Service History";
    var user = Context.Session.GetString("User");
    SessionUser sessionUser = new SessionUser();

    if (user != null)
    {
        sessionUser = JsonConvert.DeserializeObject<SessionUser>(user);
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"customer-table  newservicerequest serviceproviderhistory\">\r\n  \r\n    <input type=\"hidden\" id=\"hiddenuserid\"");
            BeginWriteAttribute("value", " value=\"", 434, "\"", 461, 1);
#nullable restore
#line 15 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\ServiceProvider\ServiceHistory.cshtml"
WriteAttributeValue("", 442, sessionUser.UserID, 442, 19, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n    <input type=\"hidden\" id=\"hiddenServiceRequestId\"");
            BeginWriteAttribute("value", " value=\"", 519, "\"", 527, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n    <input type=\"hidden\" id=\"hiddenserviceproviderid\"");
            BeginWriteAttribute("value", " value=\"", 586, "\"", 594, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n    <table id=\"example\" class=\"display customer-table history-table\" style=\"width:100%\">\r\n        <thead>\r\n            <tr>\r\n                <th>Service ID <img");
            BeginWriteAttribute("alt", " alt=\"", 760, "\"", 766, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img\"></th>\r\n                <th>Service data <img");
            BeginWriteAttribute("alt", " alt=\"", 832, "\"", 838, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img\"></th>\r\n                <th class=\"cus-dait\">Customer details <img");
            BeginWriteAttribute("alt", " alt=\"", 925, "\"", 931, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n");
            DefineSection("UserLayoutSection", async() => {
                WriteLiteral(@"
    <script>

        $(document).ready(function () {
            $('#example').DataTable({
                ""dom"": '<""top""i>rt<""bottom""flp><""clear"">',

                ""bFilter"": false, //hide Search bar
                ""pagingType"": ""full_numbers"",
                paging: true,
                ""pagingType"": ""full_numbers"",
                // bFilter: false,
                ordering: true,
                searching: false,
                info: true,

                ""oLanguage"": {
                    ""sInfo"": ""Total Records: _TOTAL_""
                },
                ""dom"": 'Bt<""top"">rt<""bottom""lip><""clear"">',
                responsive: true,
                ""order"": [],
                buttons: {
                    dom: {
                        button: {
                            tag: 'button',
                            className: ''
                        }
                    },
                    buttons: [{
                        extend: 'excel',
              ");
                WriteLiteral(@"          text: 'Export',
                        className: ""Export"",
                        exportOptions: {
                            columns: [0, 1, 2]
                        },
                    }]
                }
            });
        });

        $(document).ready(function () {
            loaddata();
        });

        function loaddata() {
            $.ajax({
                url: '/serviceprovider/getservicehistory',
                type: 'post',

                success: function (respo) {
                    $('#example').DataTable().clear();
                    console.log(respo.length);


                    respo.forEach(function (element) {
                        var t = $('#example').DataTable();
                        date = new Date(element.servicestartdate);

                        var d2 = new Date(element.servicestartdate);
                        d2.setMinutes(d2.getMinutes() + (element.servicehoures * 60));
                        var tempti");
                WriteLiteral(@"me = AppendZero(date.getHours().toString()) + "":"" + AppendZero(date.getMinutes().toString()) + "" - "" + AppendZero(d2.getHours().toString()) + "":"" + AppendZero(d2.getMinutes().toString())
                        var inputtagdate = AppendZero(date.getDate().toString()) + ""-"" + AppendZero((date.getMonth() + 1).toString()) + ""-"" + date.getFullYear().toString();


                        t.row.add([
                            '<span class=""tdclick""> <a onclick=""showservicerequestdetailmodel(' + element.serviceid + ',1)"" class=""startid d-flex justify-content-center align-items-center"" href=""#""> ' + element.serviceid + '</a></span>',
                            '<img src=""..//img/service-provider-upcoming-service/calendar2.png"" alt=""""><span class=""bold"">' + inputtagdate + '</span> <br><img src=""..//img/service-provider-upcoming-service/layer-712.png"" alt="""">' + temptime,
                            element.customeruser.firstName + element.customeruser.lastName + '<br><img src = ""..//img/service-provider-upco");
                WriteLiteral(@"ming-service/layer-15.png"" alt = """"> ' + element.serviceaddressstrretname + ' ' + element.serviceaddresshousenumber + ' <br> ' + element.servicereqestpostalcode + ' ' + element.servicereqestcity,
                            '<span class=""price""> ' + element.payment + 'â‚¬' + '</span>',
                        ]).draw(false);

                    });
                }
            });
        }
        function AppendZero(input) {
            if (input.length == 1) {
                return '0' + input;
            }
            return input;
        }
        function showservicerequestdetailmodel(id, index) {
            $(""#trserviceprovidermodel"").modal(""show"");
            $(""#hiddenServiceRequestId"").val(id);
            console.log($(""#hiddenServiceRequestId"").val(id));

            $.ajax({
                type: 'Post',
                url: '/serviceprovider/dispaydataformtheserviceid',
                data: { ""servicerequestid"": id },
                success: function (respo) {
   ");
                WriteLiteral(@"                 console.log(respo);

                    document.getElementById(""serviceproviderd&t"").innerHTML = respo.user.serviceStartDate;
                    document.getElementById(""serviceproviderduration"").innerHTML = respo.user.serviceHours;
                    document.getElementById(""serviceprovidersrid"").innerHTML = respo.user.serviceRequestId;
                    document.getElementById(""serviceproviderextra"").innerHTML = respo.serviceRequestExtraName;
                    document.getElementById(""serviceproviderprice"").innerHTML = respo.user.totalCost;
                    document.getElementById(""customername"").innerHTML = respo.user.user.firstName + "" "" + respo.user.user.lastName;
                    document.getElementById(""serviceproviderserviceaddress"").innerHTML = respo.user.serviceRequestAddresses[0].addressLine1 +
                        respo.user.serviceRequestAddresses[0].addressLine2 + '<br>' +
                        respo.user.serviceRequestAddresses[0].postalCode +
    ");
                WriteLiteral(@"                    respo.user.serviceRequestAddresses[0].city;
                    document.getElementById(""serviceproviderphonenumber"").innerHTML = respo.user.serviceRequestAddresses[0].mobile;
                    document.getElementById(""serviceprovideremail"").innerHTML = respo.user.serviceRequestAddresses[0].email;
                    document.getElementById(""serviceprovidercomments"").innerHTML = respo.user.comments;

                    if (respo.user.hasPets == true) {
                        document.getElementById(""serviceproviderpet"").innerHTML = '<img src=""..//img/customer-service/included.png"" alt="""" /> I have pets at home'
                    }
                    else {
                        document.getElementById(""serviceproviderpet"").innerHTML = '<img src=""..//img/customer-service/not-included.png"" alt="""" /> I don' + ""'"" + 't have pets at home'
                    }

                    if (index == 0) {
                        document.getElementById(""btnreschedulejsdashbord"").");
                WriteLiteral(@"innerHTML = '<hr /><button class=""btn btnReschedule d-inline-block"" value="""" onclick=""rescheduleservicemodel()"">Reschedule</button><button class=""btn btncancel d-inline-block pl-2"" value = """" onclick=""canelservicemodel()""> Cancel</button>';
                    }
                    else {
                        document.getElementById(""btnreschedulejsdashbord"").innerHTML = '';

                    }

                    var inputDate = respo.user.serviceStartDate;
                    const date = new Date(inputDate);
                    var inputTagDate = date.getFullYear().toString() + ""-"" + AppendZero((date.getMonth() + 1).toString()) + ""-"" + AppendZero(date.getDate().toString());

                    console.log(inputTagDate);

                    $(""#datechange"").val(inputTagDate);
                   
                },
                error: function (respo) {
                    alert('error:' + respo.responseText);
                }
            });

        }

    </script>
   ");
                WriteLiteral(@" <script src=""https://cdn.datatables.net/buttons/2.1.0/js/dataTables.buttons.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js""></script>
    <script src=""https://cdn.datatables.net/buttons/2.1.0/js/buttons.html5.min.js""></script>
    <script src=""https://cdn.datatables.net/buttons/2.1.0/js/buttons.print.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js""></script>
    <script src=""https://cdn.datatables.net/buttons/2.1.0/js/dataTables.buttons.min.js""></script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
