#pragma checksum "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\ServiceProvider\NewServiceRequest.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d094acef85d3f4c10420dba8db7c2e7cdce388a8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ServiceProvider_NewServiceRequest), @"mvc.1.0.view", @"/Views/ServiceProvider/NewServiceRequest.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Enums;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d094acef85d3f4c10420dba8db7c2e7cdce388a8", @"/Views/ServiceProvider/NewServiceRequest.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1b4b1c47201b9aa2787e6cec5b59d0d5213a1108", @"/Views/_ViewImports.cshtml")]
    public class Views_ServiceProvider_NewServiceRequest : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\ServiceProvider\NewServiceRequest.cshtml"
  
    Layout = "~/Views/Shared/UserLayout.cshtml";
    ViewData["Title"] = "New Services";
    var user = Context.Session.GetString("User");
    SessionUser sessionUser = new SessionUser();

    if (user != null)
    {
        sessionUser = JsonConvert.DeserializeObject<SessionUser>(user);
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"customer-table  newservicerequest\">\r\n    <div class=\"sub-headding p-b-10\">\r\n        <div class=\"form-check \">\r\n            <input class=\"form-check-input\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 495, "\"", 503, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"chkpet\" onchange=\"afterload()\">\r\n            <label class=\"form-check-label\" for=\"chkpet\">\r\n                Include Pet at Home\r\n            </label>\r\n        </div>\r\n    </div>\r\n    <input type=\"hidden\" id=\"hiddenuserid\"");
            BeginWriteAttribute("value", " value=\"", 730, "\"", 757, 1);
#nullable restore
#line 22 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\ServiceProvider\NewServiceRequest.cshtml"
WriteAttributeValue("", 738, sessionUser.UserID, 738, 19, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n    <input type=\"hidden\" id=\"hiddenServiceRequestId\"");
            BeginWriteAttribute("value", " value=\"", 815, "\"", 823, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n    <input type=\"hidden\" id=\"hiddenserviceproviderid\"");
            BeginWriteAttribute("value", " value=\"", 882, "\"", 890, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n    <table id=\"example\" class=\"display customer-table history-table\" style=\"width:100%\">\r\n        <thead>\r\n            <tr>\r\n                <th>Service ID <img");
            BeginWriteAttribute("alt", " alt=\"", 1056, "\"", 1062, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img\"></th>\r\n                <th>Service data <img");
            BeginWriteAttribute("alt", " alt=\"", 1128, "\"", 1134, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img\"></th>\r\n                <th class=\"cus-dait\">Customer details <img");
            BeginWriteAttribute("alt", " alt=\"", 1221, "\"", 1227, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img\"></th>\r\n                <th>Payment <img");
            BeginWriteAttribute("alt", " alt=\"", 1288, "\"", 1294, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img\"></th>\r\n                <th>Time conflict  <img");
            BeginWriteAttribute("alt", " alt=\"", 1362, "\"", 1368, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img\"></th>\r\n");
            WriteLiteral("                <th>Action <img");
            BeginWriteAttribute("alt", " alt=\"", 1505, "\"", 1511, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"sorting-img\"></th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n");
            DefineSection("UserLayoutSection", async() => {
                WriteLiteral(@"

    <script>
        $(document).ready(function () {
            $('#example').DataTable({
                ""dom"": '<""top""i>rt<""bottom""flp><""clear"">',
                ""columnDefs"": [
                    { ""orderable"": false, ""targets"": 4 }
                ],

                ""bFilter"": false, //hide Search bar
                ""pagingType"": ""full_numbers"",
                paging: true,
                ""pagingType"": ""full_numbers"",
                // bFilter: false,
                ordering: true,
                searching: false,
                info: true,
                ""columnDefs"": [
                    { ""orderable"": false, ""targets"": 5 }
                ],
                ""oLanguage"": {
                    ""sInfo"": ""Total Records: _TOTAL_""
                },
                ""dom"": 'Bt<""top"">rt<""bottom""lip><""clear"">',
                responsive: true,
                ""order"": [],
                buttons: {
                    dom: {
                        button: {
       ");
                WriteLiteral(@"                     tag: 'button',
                            className: ''
                        }
                    },
                    buttons: [{
                        extend: 'excel',
                        text: 'Export',
                        className: ""Export"",
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        },
                    }]
                }
            });
        });

        $(document).ready(function () {
            FillCheckboxHasPet();
        });

        function afterload() {
            $('#example').DataTable().clear().draw();
            Newservicerequest();
        }

        function FillCheckboxHasPet() {
            //debugger;
            $.ajax({
                url: '/serviceprovider/FillcheckboxHaspet',

                type: 'post',
                success: function (resp) {
                    console.log(resp);
                    if (resp == true) {
   ");
                WriteLiteral(@"                     $(""#chkpet"").attr(""checked"", true)
                    }
                    Newservicerequest();

                }
            });
        }
        function AppendZero(input) {
            if (input.length == 1) {
                return '0' + input;
            }
            return input;
        }
        function Newservicerequest() {
            debugger;
            var HasPat = $(""#chkpet"").prop(""checked"");
            $.ajax({
                url: '/serviceprovider/getnewservicerequest',
                type: 'post',
                data: { 'HasPat': HasPat },
                success: function (respo) {
                    $('#example').DataTable().clear();
                    console.log(respo.length);


                    respo.forEach(function (element) {
                        var t = $('#example').DataTable();
                        date = new Date(element.servicestartdate);

                        var d2 = new Date(element.servicestartdate);");
                WriteLiteral(@"
                        d2.setMinutes(d2.getMinutes() + (element.servicehoures * 60));
                        var temptime = AppendZero(date.getHours().toString()) + "":"" + AppendZero(date.getMinutes().toString()) + "" - "" + AppendZero(d2.getHours().toString()) + "":"" + AppendZero(d2.getMinutes().toString())
                        var inputtagdate = AppendZero(date.getDate().toString()) + ""-"" + AppendZero((date.getMonth() + 1).toString()) + ""-"" + date.getFullYear().toString();


                        t.row.add([
                            '<span class=""tdclick""> <a onclick=""showservicerequestdetailmodel(' + element.serviceid + ',1)"" class=""startid d-flex justify-content-center align-items-center"" href=""#""> ' + element.serviceid + '</a></span>',
                            '<img src=""..//img/service-provider-upcoming-service/calendar2.png"" alt=""""><span class=""bold"">' + inputtagdate + '</span> <br><img src=""..//img/service-provider-upcoming-service/layer-712.png"" alt="""">' + temptime,
               ");
                WriteLiteral(@"             element.customeruser.firstName + element.customeruser.lastName + '<br><img src = ""..//img/service-provider-upcoming-service/layer-15.png"" alt = """"> ' + element.serviceaddressstrretname + ' ' + element.serviceaddresshousenumber + ' <br> ' + element.servicereqestpostalcode + ' ' + element.servicereqestcity,
                            '<span class=""price""> ' + element.payment + '€' + '</span>',
                            '',
                            ""<button class='btn btn-Accept btn-rounded-17' onclick='AcceptReqest("" + element.serviceid + "", \"""" + element.recordVersion + ""\"")' value='Accept'>Accept</button>""

                        ]).draw(false);

                    });
                }
            });
        }


        function AcceptReqest(servicerequestid, recordVersion) {
            debugger;
            $.ajax({
                url: '/serviceprovider/AcceptServicerequest',
                data: { 'serviceid': servicerequestid, 'recordVersion': recordVersion },
  ");
                WriteLiteral(@"              type: 'post',
                success: function (resp) {
                    console.log(resp);
                    debugger;
                    $(""#trserviceprovidermodel"").modal(""hide"");
                    if (resp) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Request Accepted',
                            text: 'Request Accept Successfully ID :-' + servicerequestid,
                        })
                        Newservicerequest();
                    }
                    if (resp.serviceRequestConflict == false) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Time Conflict',
                            text: 'Another service request ' + resp.serviceRequestId + ' has already been assigned which has time overlap with this service request. You can’t pick this one!!',
                        })
                        Newservice");
                WriteLiteral(@"request();
                    }
                    if (resp.noLongerAvailable == true) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Service Request is no more Available!!',
                            text: 'This Service Request is no more Available. It has been assigned to another Service Provider!!'
                        })
                        /*showSPNewServiceRequestsData(document.getElementById(""hasPetsForNewRequestsOfSP"").checked);*/
                        afterload();
                        Newservicerequest();
                    }




                }
            });
        }
        function showservicerequestdetailmodel(id, index) {
            $(""#trserviceprovidermodel"").modal(""show"");
            $(""#hiddenServiceRequestId"").val(id);
            console.log($(""#hiddenServiceRequestId"").val(id));

            $.ajax({
                type: 'Post',
                url: '/serviceprovider/di");
                WriteLiteral(@"spaydataformtheserviceid',
                data: { ""servicerequestid"": id },
                success: function (respo) {
                    console.log(respo);

                    document.getElementById(""serviceproviderd&t"").innerHTML = respo.user.serviceStartDate;
                    document.getElementById(""serviceproviderduration"").innerHTML = respo.user.serviceHours;
                    document.getElementById(""serviceprovidersrid"").innerHTML = respo.user.serviceRequestId;
                    document.getElementById(""serviceproviderextra"").innerHTML = respo.serviceRequestExtraName;
                    document.getElementById(""serviceproviderprice"").innerHTML = respo.user.totalCost;
                    document.getElementById(""customername"").innerHTML = respo.user.user.firstName + "" "" + respo.user.user.lastName;
                    document.getElementById(""serviceproviderserviceaddress"").innerHTML = respo.user.serviceRequestAddresses[0].addressLine1 +
                        respo.user.servi");
                WriteLiteral(@"ceRequestAddresses[0].addressLine2 + '<br>' +
                        respo.user.serviceRequestAddresses[0].postalCode +
                        respo.user.serviceRequestAddresses[0].city;
                    document.getElementById(""serviceproviderphonenumber"").innerHTML = respo.user.serviceRequestAddresses[0].mobile;
                    document.getElementById(""serviceprovideremail"").innerHTML = respo.user.serviceRequestAddresses[0].email;
                    document.getElementById(""serviceprovidercomments"").innerHTML = respo.user.comments;
                    $(""#btnaccept"").html('<button class=""btn btnlightgreen"" onclick=""AcceptReqest(' + respo.user.serviceRequestId + ', \'' + respo.user.recordVersion + '\')""><img src=""..//img/service-provider/ic-check.png"" alt=""Alternate Text"" class=""me - 1""/> Accept</button>');
                  
                    if (respo.user.hasPets == true) {
                        document.getElementById(""serviceproviderpet"").innerHTML = '<img src=""..//img/customer-se");
                WriteLiteral(@"rvice/included.png"" alt="""" /> I have pets at home'
                        // alert(""pet che"");
                    }
                    else {
                        document.getElementById(""serviceproviderpet"").innerHTML = '<img src=""..//img/customer-service/not-included.png"" alt="""" /> I don' + ""'"" + 't have pets at home'
                    }
                    if (index == 0) {
                        document.getElementById(""btnreschedulejsdashbord"").innerHTML = '<hr /><button class=""btn btnReschedule d-inline-block"" value="""" onclick=""rescheduleservicemodel()"">Reschedule</button><button class=""btn btncancel d-inline-block pl-2"" value = """" onclick=""canelservicemodel()""> Cancel</button>';
                    }
                    else {
                        document.getElementById(""btnreschedulejsdashbord"").innerHTML = '';
                    }

                    var inputDate = respo.user.serviceStartDate;
                    const date = new Date(inputDate);
                    var");
                WriteLiteral(@" inputTagDate = date.getFullYear().toString() + ""-"" + AppendZero((date.getMonth() + 1).toString()) + ""-"" + AppendZero(date.getDate().toString());

                    console.log(inputTagDate);

                    $(""#datechange"").val(inputTagDate);
                   
                },
                error: function (respo) {
                    alert('error:' + respo.responseText);
                }
            });

        }


    </script>
   
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
