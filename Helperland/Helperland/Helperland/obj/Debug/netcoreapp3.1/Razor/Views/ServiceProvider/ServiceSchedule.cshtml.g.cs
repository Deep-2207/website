#pragma checksum "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\ServiceProvider\ServiceSchedule.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "dee11f442db73ade57a5ef5c7d962a8f915fb8cd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ServiceProvider_ServiceSchedule), @"mvc.1.0.view", @"/Views/ServiceProvider/ServiceSchedule.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Enums;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dee11f442db73ade57a5ef5c7d962a8f915fb8cd", @"/Views/ServiceProvider/ServiceSchedule.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1b4b1c47201b9aa2787e6cec5b59d0d5213a1108", @"/Views/_ViewImports.cshtml")]
    public class Views_ServiceProvider_ServiceSchedule : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "F:\PSD TO HTML\website\Helperland\Helperland\Helperland\Views\ServiceProvider\ServiceSchedule.cshtml"
  
    Layout = "~/Views/Shared/UserLayout.cshtml";
    ViewData["Title"] = "BlockCustomer";
    var user = Context.Session.GetString("User");
    SessionUser sessionUser = new SessionUser();

    if (user != null)
    {
        sessionUser = JsonConvert.DeserializeObject<SessionUser>(user);
    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""main-content"">
    <div class=""calender"" id=""calendar""></div>
</div>

<script type=""text/javascript"">
    var events = [];

    $(document).ready(function () {
        $.ajax({
            url: '/ServiceProvider/GetServiceRequestListForCalender',
            type: 'post',
            dataType: 'json',
            success: function (resp) {
                console.log(resp);
                //servicestarttime
                //serviceproviderid
                //servicehours
                resp.forEach((element) => {
                    events.push({
                        id: element.servirequestid,
                        title: eventTitle(element.servicestarttime, element.serviceendtime),
                        start: element.servicestarttime,
                        end: element.serviceendtime,
                        color: element.servicestatus == 4 ? ""#525252"" : ""#1d7a8c"",
                        allDay: true,
                        className: ""text-center fw-b");
            WriteLiteral(@"old""
                    });
                });

                var calendarEl = document.getElementById('calendar');

                var calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'dayGridMonth',
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: ''
                    },
                    events: events,
                    eventClick: function (calEvent, jsEvent, view) {
                        showservicerequestdetailmodel(calEvent.event.id,1);
                    },
                    contentHeight: 600
                });

                calendar.render();
            },
            error: function (err) {
                console.log(err);
            }
        });
    });

    
    function showservicerequestdetailmodel(id, index) {
        $(""#trserviceprovidermodel"").modal(""show"");
        $(""#hiddenServiceRequestId"")");
            WriteLiteral(@".val(id);
        console.log($(""#hiddenServiceRequestId"").val(id));
        $(""#loader"").addClass(""is-active"");
        $.ajax({
            type: 'Post',
            url: '/serviceprovider/dispaydataformtheserviceid',
            data: { ""servicerequestid"": id },
            success: function (respo) {
                console.log(respo);
                $(""#loader"").removeClass(""is-active"");
                document.getElementById(""serviceproviderd&t"").innerHTML = respo.user.serviceStartDate;
                document.getElementById(""serviceproviderduration"").innerHTML = respo.user.serviceHours;
                document.getElementById(""serviceprovidersrid"").innerHTML = respo.user.serviceRequestId;
                document.getElementById(""serviceproviderextra"").innerHTML = respo.serviceRequestExtraName;
                document.getElementById(""serviceproviderprice"").innerHTML = respo.user.totalCost;
                document.getElementById(""customername"").innerHTML = respo.user.user.firstName + ");
            WriteLiteral(@""" "" + respo.user.user.lastName;
                document.getElementById(""serviceproviderserviceaddress"").innerHTML = respo.user.serviceRequestAddresses[0].addressLine1 +
                    respo.user.serviceRequestAddresses[0].addressLine2 + '<br>' +
                    respo.user.serviceRequestAddresses[0].postalCode +
                    respo.user.serviceRequestAddresses[0].city;
                document.getElementById(""serviceproviderphonenumber"").innerHTML = respo.user.serviceRequestAddresses[0].mobile;
                document.getElementById(""serviceprovideremail"").innerHTML = respo.user.serviceRequestAddresses[0].email;
                document.getElementById(""serviceprovidercomments"").innerHTML = respo.user.comments;
               /* $(""#btnaccept"").html('<button class=""btn btnlightgreen"" onclick=""AcceptReqest(' + respo.user.serviceRequestId + ', \'' + respo.user.recordVersion + '\')""><img src=""..//img/service-provider/ic-check.png"" alt=""Alternate Text"" class=""me - 1""/> Accept</button>');*/");
            WriteLiteral(@"

                if (respo.user.hasPets == true) {
                    document.getElementById(""serviceproviderpet"").innerHTML = '<img src=""..//img/customer-service/included.png"" alt="""" /> I have pets at home'
                    // alert(""pet che"");
                }
                else {
                    document.getElementById(""serviceproviderpet"").innerHTML = '<img src=""..//img/customer-service/not-included.png"" alt="""" /> I don' + ""'"" + 't have pets at home'
                }
                if (index == 0) {
                    document.getElementById(""btnreschedulejsdashbord"").innerHTML = '<hr /><button class=""btn btnReschedule d-inline-block"" value="""" onclick=""rescheduleservicemodel()"">Reschedule</button><button class=""btn btncancel d-inline-block pl-2"" value = """" onclick=""canelservicemodel()""> Cancel</button>';
                }
                else {
                    document.getElementById(""btnreschedulejsdashbord"").innerHTML = '';
                }

                var inputD");
            WriteLiteral(@"ate = respo.user.serviceStartDate;
                const date = new Date(inputDate);
                var inputTagDate = date.getFullYear().toString() + ""-"" + AppendZero((date.getMonth() + 1).toString()) + ""-"" + AppendZero(date.getDate().toString());

                console.log(inputTagDate);

                $(""#datechange"").val(inputTagDate);

            },
            error: function (respo) {
                alert('error:' + respo.responseText);
            }
        });

    }
    function eventTitle(eventStartTime, eventEndTime) {
        var start = new Date(eventStartTime);
        var end = new Date(eventEndTime);
        return AppendZero(start.getHours().toString()) + "":"" + AppendZero(start.getMinutes().toString()) + "" - "" +
            AppendZero(end.getHours().toString()) + "":"" + AppendZero(end.getMinutes().toString());
    }
    function AppendZero(input) {
        if (input.length == 1) {
            return '0' + input;
        }
        return input;
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
