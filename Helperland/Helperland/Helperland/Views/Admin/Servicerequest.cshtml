@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "ServiceRequest";
    int serviceprovider = Convert.ToInt16(UserTypeEnum.ServiceProvider);
    int customer = Convert.ToInt16(UserTypeEnum.Customer);
}
<div class="side-dashboard p-lr-20">
    <div class="sub-headding d-flex justify-content-between p-tb-15 m-t-15">
        <h2>Service Requests</h2>
        <button class="new-user btn">
            <img src="~/img/admin-user/add.png" alt="">&nbsp;&nbsp; Add New
            User
        </button>
    </div>
    <form class="requestmanagement">
        <div class="form-row align-items-center d-flex justify-content-center dv-filter">
            <div class="col">
                <input type="text" class="form-control width-110" placeholder="Service ID">
            </div>
            <div class="col form-group">

                <select id="inputState" class="form-select width-127">
                    <option disabled selected>Customer</option>
                    <option>...</option>
                </select>
            </div>
            <div class="col form-group drop-service-provider">

                <select id="inputState" class="form-select width-152">
                    <option disabled selected>Service Provider</option>
                    <option>...</option>
                </select>
            </div>
            <div class="col form-group">

                <select id="inputState" class="form-select width-120">
                    <option disabled selected>Status</option>
                    <option>...</option>
                </select>
            </div>
            <div class="col datetime">
                <!-- <input type="text" placeholder="From Date" class="form-control input-element width-135" onfocus="(this.type='date')" onblur="(this.type='text')"> -->
                <input type="text" id="txtFromDate" placeholder="From Date" onfocus="(this.type='date')" class="calender-icon form-control input-element width-135">
                <!-- <input type="date" class="form-control input-element width-135" id=""> -->
            </div>
            <div class="col datatime">
                <!-- <input type="text" placeholder="To Date" class="form-control input-element width-135" onfocus="(this.type='date')" onblur="(this.type='text')"> -->
                <input type="text" placeholder="To Date" class="calender-icon form-control input-element width-135" onfocus="(this.type='date')">
                <!-- <input type="date" class="form-control input-element width-135" id=""> -->

            </div>




            <div class="col">
                <button type="submit" class="btn btn-primary mb-2 admin-submit width-84">Submit</button>
            </div>
            <div class="col">
                <button type="submit" class="btn btn-light mb-2 width-84">clear</button>
            </div>
        </div>
    </form>
    <div class="admin-data-table p-t-20">
        <table id="example" class="display" style="width:100%">
            <thead>
                <tr>
                    <th>Service ID<img alt="" class="sorting-img p-l-5"></th>
                    <th>Service date<img alt="" class="sorting-img p-l-5"></th>
                    <th>Customer details<img alt="" class="sorting-img p-l-5"></th>
                    <th>Service provider<img alt="" class="sorting-img p-l-5"></th>
                    <th>Status<img alt="" class="sorting-img p-l-5"></th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>

        </table>
    </div>

</div>

@section Scripts{

   <script>
       $(document).ready(function () {
           $('#example').on('draw.dt', function () { //every time ajax call, this code execute

               $(".ratingspdashboard").rating({
                   min: 0,
                   max: 5,
                   step: 0.1,
                   size: "xs",
                   stars: "5",
                   showClear: false,
                   readonly: true,
                   starCaptions: function (val) {
                       return val;
                   }
               });
           });

           $('#example').DataTable({

               "dom": '<"top"i>rt<"bottom"flp><"clear">',


               "bFilter": false, //hide Search bar
               "pagingType": "full_numbers",
               paging: true,
               "pagingType": "full_numbers",
               // bFilter: false,
               ordering: true,
               searching: false,
               info: true,

               "oLanguage": {
                   "sInfo": "Total Records: _TOTAL_"
               },
               "dom": 'Bt<"top">rt<"bottom"lip><"clear">',
               responsive: true,
               "order": [],
              
           });
           getallservicerequest();
       });
       function getallservicerequest() {
        
           $.ajax({
               type: 'post',
               url: '/Admin/getallrequest',
               success: function (resp) {
                   console.log(resp);
                   $('#example').DataTable().clear();

                   resp.forEach(function (element) {
                       var t = $('#example').DataTable();
                       date = new Date(element.servicestartdate);
                       var inputtagdate = AppendZero(date.getDate().toString()) + "-" + AppendZero((date.getMonth() + 1).toString()) + "-" + date.getFullYear().toString();
                       var d2 = new Date(element.servicestartdate);
                       d2.setMinutes(d2.getMinutes() + (element.servicehours * 60));
                       var temptime = AppendZero(date.getHours().toString()) + ":" + AppendZero(date.getMinutes().toString()) + " - " + AppendZero(d2.getHours().toString()) + ":" + AppendZero(d2.getMinutes().toString())
                       var inputtagdate = AppendZero(date.getDate().toString()) + "-" + AppendZero((date.getMonth() + 1).toString()) + "-" + date.getFullYear().toString();
                       var serviceproviderdetails;

                       if (element.serviceprovideruser != null) {
                           serviceproviderdetails = '<div class="d-flex"><img class="align-self-center mr-3" src="..//img/customer-service/forma-1-copy-19.png"> <div class="media-body"> ' + element.serviceprovideruser.firstName + " " + element.serviceprovideruser.lastName ;

                           if (element.ratings != null) {
                               serviceproviderdetails = serviceproviderdetails + '<input required class= "ratingspdashboard"  value = "' + element.ratings + '" type = "text" title = "" > ' ;
                           }
                           else {
                               serviceproviderdetails = serviceproviderdetails + "<br> Not Rated";
                           }

                           serviceproviderdetails = serviceproviderdetails + " </div></div>";
                       }
                       else {
                           serviceproviderdetails = '';
                       }
                      
                       var servicestutas;
                       var editandrefunnd;
                       switch (element.status) {
                           case 1:
                               servicestutas = '<button class="btn-new" value="New">New</button>';
                               editandrefunnd = '<ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="navbarDropdown"><li><a class="dropdown-item" href="#">Edit & Refund</a></li></ul>';
                               break;
                           case 2:
                               servicestutas = '<button class="btn-pandding" value="Pandding">Pandding</button>';
                               editandrefunnd = '<ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="navbarDropdown"><li><a class="dropdown-item" href="#">Edit & Refund</a></li></ul>';
                               break;
                           case 3:
                               servicestutas = '<button class="btn-Cancel" value="Cancelled">Cancelled</button>';
                               editandrefunnd = ''
                               break;
                           case 4:
                               servicestutas = '<button class="btn-completed" value="Completed">Completed</button>';
                               editandrefunnd = ''
                               break;
                       }



                       t.row.add([
                           element.servicerequestid,
                           '<img src="..//img/service-provider-upcoming-service/calendar2.png" alt=""><span class="bold">' + inputtagdate + '</span> <br><img src="..//img/service-provider-upcoming-service/layer-712.png" alt="">' + temptime,
                           element.customeruser.firstName + element.customeruser.lastName + '<br><img src = "..//img/service-provider-upcoming-service/layer-15.png" alt = ""> ' + element.customeraddress1 + ' <br> ' + element.customeraddress2,
                           serviceproviderdetails,
                           servicestutas,
                           '<div class="nav-item dropdown action servicerequestaction">' +
                           '<a class= "nav-link dropdown-toggle" href = "#" id = "navbarDropdown" role = "button"' +
                           'data-bs-toggle="dropdown" aria-expanded="false" >' +
                           '<img src="..//img/admin-user/group-38.png" alt="">' +
                           '</a>' +
                           editandrefunnd +
                           '</div >'

                       ]).draw(false);
                       $('.rb-rating').rating({
                           'showCaption': true,
                           'stars': '3',
                           'min': '0',
                           'max': '3',
                           'step': '1',
                           'size': 'xs',
                           'starCaptions': { 0: 'status:nix', 1: 'status:wackelt', 2: 'status:geht', 3: 'status:laeuft' }
                       });
                       $(".ratingspdashboard").rating({
                           min: 0,
                           max: 5,
                           step: 0.1,
                           size: "xs",
                           stars: "5",
                           showClear: false,
                            readonly: true,
                           starCaptions: function (val) {
                               return val;
                           },
                       });
                   });
               },
               error: function (err) {
                   $("#loader").removeClass("is-active");
                   console.log(err);
               }
           });
       }
       function AppendZero(input) {
           if (input.length == 1) {
               return '0' + input;
           }
           return input;
       }
   </script>

}